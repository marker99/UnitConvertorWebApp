@using UnitConvertorWebApp.Models
@using UnitConvertorWebApp.Services
@using UnitConvertorWebApp.Pages.Components
@using UnitConvertorWebApp.ViewModels

<MudCard Class="mx-4" Elevation="1" Style="border-radius: 24px">
    <MudCardContent>
        <div class="d-flex justify-space-between align-center mb-4">
            <MudText Typo="Typo.h5">@TitleOfCard</MudText>
            <FavoriteButton IsFavorite="@IsFavorite" OnToggleFavorite="@OnToggleFavorite" />
        </div>
        <MudGrid Spacing="4" Justify="Justify.Center">
            <MudItem xs="12" sm="3" md="3">
                <MudSelect T="string" Value="@SelectedFromUnit" ValueChanged="@HandleFromUnitChanged" Label="From Unit" Variant="Variant.Outlined" AdornmentColor="Color.Primary">
                    @foreach (var unit in Units)
                    {
                        <MudSelectItem Value="@unit">@unit</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" sm="3" md="3">
                <MudTextField @bind-Value="InputValue" Label="Enter Value" Variant="Variant.Outlined" AdornmentColor="Color.Primary" />
            </MudItem>
            <MudItem xs="12" sm="3" md="3">
                <MudSelect T="string" Value="@SelectedToUnit" ValueChanged="@HandleToUnitChanged" Label="To Unit" Variant="Variant.Outlined" AdornmentColor="Color.Primary">
                    @foreach (var unit in Units.Where(u => u != SelectedFromUnit))
                    {
                        <MudSelectItem Value="@unit">@unit</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" sm="3" md="2" Class="d-flex justify-center align-center">
                <MudButton OnClick="OnConvert" Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Material.Filled.Calculate">Convert</MudButton>
            </MudItem>
            <MudItem xs="12" sm="4" md="3" Class="d-flex justify-center">
                <MudTextField Label="Result" Variant="Variant.Outlined" ReadOnly="true" Value="@ResultText" />
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>
<MudDivider Class="my-6" Style="height: 4px; background-color: #ab542e; border-radius:8px" />

@code {
    [Parameter] public string TitleOfCard { get; set; }
    [Parameter] public List<string> Units { get; set; }
    [Parameter] public string SelectedFromUnit { get; set; }
    [Parameter] public string SelectedToUnit { get; set; }
    [Parameter] public bool IsFavorite { get; set; }
    [Parameter] public double InputValue { get; set; }
    [Parameter] public string ResultText { get; set; }
    [Parameter] public EventCallback OnToggleFavorite { get; set; }
    [Parameter] public EventCallback<string> OnFromUnitChanged { get; set; }
    [Parameter] public EventCallback<string> OnToUnitChanged { get; set; }
    [Parameter] public EventCallback OnConvert { get; set; }

    private Task HandleFromUnitChanged(string value)
    {
        return OnFromUnitChanged.InvokeAsync(value);
    }

    private Task HandleToUnitChanged(string value)
    {
        return OnToUnitChanged.InvokeAsync(value);
    }
}