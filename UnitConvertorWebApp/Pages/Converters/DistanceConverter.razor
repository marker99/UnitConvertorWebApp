@using UnitConvertorWebApp.Services
@inject IDistanceConversionService DistanceService


<MudText Typo="Typo.h5" Class="mb-2 mx-4">Convert Distances</MudText>

<MudCard Class="mx-4">
    <MudCardContent>
        @* <MudText Typo="Typo.h5" Class="mb-2">Distance Converter</MudText> *@

        <MudGrid Spacing="4" Justify="Justify.Center">
            <MudItem xs="12" sm="3" md="3">
                <MudSelect @bind-Value="selectedFromUnit" Label="From Unit" Variant="Variant.Outlined" Class="mud-background" AdornmentColor="Color.Primary">
                    @foreach (var unit in distanceUnits)
                    {
                        <MudSelectItem Value="@unit">@unit</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12" sm="3" md="3">
                <MudTextField @bind-Value="inputValue" Label="Enter Value" Variant="Variant.Outlined" Class="mud-background" AdornmentColor="Color.Primary" />
            </MudItem>

            <MudItem xs="12" sm="3" md="3">
                <MudSelect @bind-Value="selectedToUnit" Label="To Unit" Variant="Variant.Outlined" Class="mud-background" AdornmentColor="Color.Primary">
                    @foreach (var unit in distanceUnits.Where(u => u != selectedFromUnit))
                    {
                        <MudSelectItem Value="@unit">@unit</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12" sm="3" md="2" Class="d-flex justify-center align-center">
                <MudButton OnClick="ConvertUnits" Variant="Variant.Filled" Color="Color.Primary">Convert</MudButton>
            </MudItem>

            <!-- Center the result field -->
            @* Maybe add some hidden helper text to show when focus *@
            @* https://mudblazor.com/components/textfield#form-props-helper-text-on-focus *@
            <MudItem xs="12" sm="4" md="3" Class="d-flex justify-center">
                <MudTextField Label="Result" Variant="Variant.Outlined" ReadOnly="true" Value="@resultValue" Class="mud-background" />
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>
@code {
    private double inputValue;
    private double resultValue;

    private string selectedFromUnit = "Meters";
    private string selectedToUnit = "Feet";

    private List<string> distanceUnits = new List<string>
    {
        "Millimeters", "Centimeters", "Meters", "Kilometers",
        "Inches", "Feet", "Yards", "Miles"
    };

    private void ConvertUnits()
    {
        // Simple example switch-case to call appropriate conversion based on selected units
        if (selectedFromUnit == "Meters" && selectedToUnit == "Feet")
        {
            resultValue = DistanceService.MetersToFeet(inputValue);
        }
        else if (selectedFromUnit == "Feet" && selectedToUnit == "Meters")
        {
            resultValue = DistanceService.FeetToMeters(inputValue);
        }
        // Add more conditions for all possible combinations
    }
}