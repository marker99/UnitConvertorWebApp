@using UnitConvertorWebApp.Services
@inject IDistanceConversionService DistanceService


<MudText Typo="Typo.h5" Class="mb-2 mx-4">Convert Distances</MudText>

<ConversionComponent Units="distanceUnits" DefaultFromUnit="@distanceUnits[0]" Convert="(value, fromUnit, toUnit) => ConvertDistance(value, fromUnit, toUnit)" />

@code {
    private List<string> distanceUnits = new List<string>
    {
        "Millimeters (mm)", "Centimeters (cm)", "Meters (m)", "Kilometers (km)",
        "Inches (in)", "Feet (ft)", "Yards (yd)", "Miles (mi)"
    };

    private double ConvertDistance(double inputValue, string fromUnit, string toUnit)
    {
        if (fromUnit == toUnit)
        {
            return inputValue;
        }

        return (fromUnit, toUnit) switch
        {
            ("Millimeters (mm)", "Centimeters (cm)") => DistanceService.MillimetersToCentimeters(inputValue),
            ("Centimeters (cm)", "Millimeters (mm)") => DistanceService.CentimetersToMillimeters(inputValue),
            ("Centimeters (cm)", "Meters (m)") => DistanceService.CentimetersToMeters(inputValue),
            ("Meters (m)", "Centimeters (cm)") => DistanceService.MetersToCentimeters(inputValue),
            ("Meters (m)", "Kilometers (km)") => DistanceService.MetersToKilometers(inputValue),
            ("Kilometers (km)", "Meters (m)") => DistanceService.KilometersToMeters(inputValue),

            ("Meters (m)", "Feet (ft)") => DistanceService.MetersToFeet(inputValue),
            ("Feet (ft)", "Meters (m)") => DistanceService.FeetToMeters(inputValue),
            ("Meters (m)", "Yards (yd)") => DistanceService.MetersToYards(inputValue),
            ("Yards (yd)", "Meters (m)") => DistanceService.YardsToMeters(inputValue),
            ("Kilometers (km)", "Miles (mi)") => DistanceService.KilometersToMiles(inputValue),
            ("Miles (mi)", "Kilometers (km)") => DistanceService.MilesToKilometers(inputValue),
            ("Kilometers (km)", "Feet (ft)") => DistanceService.KilometersToFeet(inputValue),
            ("Feet (ft)", "Kilometers (km)") => DistanceService.FeetToKilometers(inputValue),

            ("Inches (in)", "Centimeters (cm)") => DistanceService.InchesToCentimeters(inputValue),
            ("Feet (ft)", "Yards (yd)") => DistanceService.FeetToYards(inputValue),
            ("Yards (yd)", "Feet (ft)") => DistanceService.YardsToFeet(inputValue),
            ("Inches (in)", "Feet (ft)") => DistanceService.InchesToFeet(inputValue),
            ("Feet (ft)", "Inches (in)") => DistanceService.FeetToInches(inputValue),

            _ => 0 // Return 0 for unsupported conversions
        };
    }
}